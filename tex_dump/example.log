This is pdfTeX, Version 3.141592653-2.6-1.40.22 (TeX Live 2022/dev/Debian) (preloaded format=pdflatex 2024.12.11)  29 JAN 2025 21:17
entering extended mode
 restricted \write18 enabled.
 file:line:error style messages enabled.
 %&-line parsing enabled.
**/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex
(/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex
LaTeX2e <2021-11-15> patch level 1
L3 programming layer <2022-01-21> (/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2021/10/04 v1.4n Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2021/10/04 v1.4n Standard LaTeX file (size option)
)
\c@part=\count185
\c@section=\count186
\c@subsection=\count187
\c@subsubsection=\count188
\c@paragraph=\count189
\c@subparagraph=\count190
\c@figure=\count191
\c@table=\count192
\abovecaptionskip=\skip47
\belowcaptionskip=\skip48
\bibindent=\dimen138
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2021/09/16 v1.2d Enhanced LaTeX Graphics (DPC,SPQR)
 (/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks16
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2021/03/04 v1.4d Standard LaTeX Graphics (DPC,SPQR)
 (/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2021/08/11 v1.11 sin cos tan (DPC)
) (/usr/share/texlive/texmf-dist/tex/latex/graphics-cfg/graphics.cfg
File: graphics.cfg 2016/06/04 v1.11 sample graphics configuration
)
Package graphics Info: Driver file: pdftex.def on input line 107.
 (/usr/share/texlive/texmf-dist/tex/latex/graphics-def/pdftex.def
File: pdftex.def 2020/10/05 v1.2a Graphics/color driver for pdftex
))
\Gin@req@height=\dimen139
\Gin@req@width=\dimen140
) (/usr/share/texlive/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def
File: l3backend-pdftex.def 2022-01-12 L3 backend support: PDF output (pdfTeX)
\l__color_backend_stack_int=\count193
\l__pdf_internal_box=\box50
) (./example.aux)
\openout1 = `example.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for TS1/cmr/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 6.
LaTeX Font Info:    ... okay on input line 6.
 (/usr/share/texlive/texmf-dist/tex/context/base/mkii/supp-pdf.mkii
[Loading MPS to PDF converter (version 2006.09.02).]
\scratchcounter=\count194
\scratchdimen=\dimen141
\scratchbox=\box51
\nofMPsegments=\count195
\nofMParguments=\count196
\everyMPshowfont=\toks17
\MPscratchCnt=\count197
\MPscratchDim=\dimen142
\MPnumerator=\count198
\makeMPintoPDFobject=\count199
\everyMPtoPDFconversion=\toks18
) (/usr/share/texlive/texmf-dist/tex/latex/epstopdf-pkg/epstopdf-base.sty
Package: epstopdf-base 2020-01-24 v2.11 Base part for package epstopdf
Package epstopdf-base Info: Redefining graphics rule for `.eps' on input line 485.
 (/usr/share/texlive/texmf-dist/tex/latex/latexconfig/epstopdf-sys.cfg
File: epstopdf-sys.cfg 2010/07/13 v1.3 Configuration of (r)epstopdf for TeX Live
))
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <12> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <8> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <6> on input line 7.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 10.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 10.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:13: Missing $ inserted.
<inserted text> 
                $
l.13 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:13: Display math should end with $$.
<to be read again> 
                   \tex_par:D 
l.13 
     
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:14: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.14  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:14: Missing $ inserted.
<inserted text> 
                $
l.14  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:14: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.14  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:15: Undefined control sequence.
l.15 \\Now, let's differentiate:  \texbf
                                        {\large x \normalsize}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:16: Undefined control sequence.
l.16 ...swer is for the intermediate step:  \texbf
                                                  {\large 1 \normalsize}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:20: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.20 \begin{equation}
                     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:24: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.24  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:24: Missing $ inserted.
<inserted text> 
                $
l.24  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:24: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.24  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:25: Missing $ inserted.
<inserted text> 
                $
l.25 \cdot
           1.000000
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:26: Missing $ inserted.
<inserted text> 
                $
l.26 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:27: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.27  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:27: LaTeX Error: \begin{document} ended by \end{equation}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.27  \end{equation}
                    
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:27: Missing $ inserted.
<inserted text> 
                $
l.27  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:27: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.27  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:27: Extra \endgroup.
<recently read> \endgroup 
                          
l.27  \end{equation}
                    
Things are pretty mixed up, but I think the worst is over.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:31: Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.31 \begin{equation}
                     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:35: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.35  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:35: Missing $ inserted.
<inserted text> 
                $
l.35  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:35: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.35  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:36: Missing $ inserted.
<inserted text> 
                $
l.36 \cdot
           1.000000
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:37: Missing $ inserted.
<inserted text> 
                $
l.37 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:38: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.38  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:38: LaTeX Error: \begin{document} ended by \end{equation}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.38  \end{equation}
                    
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:38: Missing $ inserted.
<inserted text> 
                $
l.38  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:38: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.38  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:38: Extra \endgroup.
<recently read> \endgroup 
                          
l.38  \end{equation}
                    
Things are pretty mixed up, but I think the worst is over.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:43: Missing $ inserted.
<inserted text> 
                $
l.43 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:43: Display math should end with $$.
<to be read again> 
                   \tex_par:D 
l.43 
     
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

[1

{/var/lib/texmf/fonts/map/pdftex/updmap/pdftex.map}]
/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:44: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.44  \end{equation}
                    
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:44: Missing $ inserted.
<inserted text> 
                $
l.44  \end{equation}
                    
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:44: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.44  \end{equation}
                    
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

Runaway argument?
{\Large :\begin {equation} cos ( x ) 
/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Paragraph ended before \text@command was complete.
<to be read again> 
                   \par 
l.52 }
      
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.52 }
      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: LaTeX Error: \begin{document} ended by \end{equation}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.52 }
      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Missing $ inserted.
<inserted text> 
                $
l.52 }
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.52 }
      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Missing } inserted.
<inserted text> 
                }
l.52 }
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Extra \endgroup.
<recently read> \endgroup 
                          
l.52 }
      
Things are pretty mixed up, but I think the worst is over.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Too many }'s.
\textbf  ...\else \hmode@bgroup \text@command {#1}
                                                  \bfseries \check@icl #1\ch...
l.52 }
      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <14.4> on input line 52.
/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Missing $ inserted.
<inserted text> 
                $
l.52 }
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Display math should end with $$.
<to be read again> 
                   \tex_par:D 
l.52 }
      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: You can't use `\eqno' in vertical mode.
\endequation ->\eqno 
                     \hbox {\@eqnnum }$$\@ignoretrue 
l.52 }
      
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Missing $ inserted.
<inserted text> 
                $
l.52 }
      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Display math should end with $$.
<to be read again> 
                   \endgroup 
l.52 }
      
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

/home/zevs_gromovergec/Programming/Github/Tailor/tex_dump/example.tex:52: Too many }'s.
<recently read> \egroup 
                        
l.52 }
      
You've closed more groups than you opened.
Such booboos are generally harmless, so keep going.

[2] (./example.aux) ) 
Here is how much of TeX's memory you used:
 1279 strings out of 480247
 20887 string characters out of 5896105
 306667 words of memory out of 5000000
 19259 multiletter control sequences out of 15000+600000
 473822 words of font info for 43 fonts, out of 8000000 for 9000
 14 hyphenation exceptions out of 8191
 55i,6n,62p,254b,193s stack positions out of 5000i,500n,10000p,200000b,80000s
</usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmbx12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmmi12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr10.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr12.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmr17.pfb></usr/share/texlive/texmf-dist/fonts/type1/public/amsfonts/cm/cmsy10.pfb>
Output written on example.pdf (2 pages, 78540 bytes).
PDF statistics:
 46 PDF objects out of 1000 (max. 8388607)
 27 compressed objects within 1 object stream
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

